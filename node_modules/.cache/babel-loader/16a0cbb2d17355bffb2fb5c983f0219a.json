{"ast":null,"code":"import _classCallCheck from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\src\\\\components\\\\ShowData\\\\LuuData\\\\ShowDataNow.js\";\nimport React, { Component } from 'react';\nimport jsPDF from 'jspdf';\n\nvar ShowDataNow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowDataNow, _Component);\n\n  function ShowDataNow(props) {\n    var _this;\n\n    _classCallCheck(this, ShowDataNow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowDataNow).call(this, props));\n    _this.state = {\n      datapdf: ''\n    };\n    return _this;\n  }\n\n  _createClass(ShowDataNow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://v2018.api2pdf.com/chrome/html', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': '7868cd09-10b9-43ba-a053-534ce60abb43' //Get your API key from \n\n        },\n        body: JSON.stringify({\n          html: this.props.vanbans,\n          inlinePdf: true,\n          fileName: 'test.pdf'\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this2.setState({\n          datapdf: res.pdf\n        });\n      });\n    }\n  }, {\n    key: \"convertHtmlToPdf\",\n    value: function convertHtmlToPdf(e) {\n      var doc = new jsPDF('p', 'in', 'letter'),\n          sizes = [12, 16, 20],\n          fonts = [['Times', 'Roman']],\n          font,\n          size,\n          lines,\n          margin = 0.5,\n          // inches on a 8.5 x 11 inch sheet.\n      verticalOffset = margin,\n          loremipsum = 'Sorry system update'; // Margins:\n\n      doc.setDrawColor(0, 255, 0).setLineWidth(1 / 72).line(margin, margin, margin, 11 - margin).line(8.5 - margin, margin, 8.5 - margin, 11 - margin); // the 3 blocks of text\n\n      for (var i in fonts) {\n        if (fonts.hasOwnProperty(i)) {\n          font = fonts[i];\n          size = sizes[i];\n          lines = doc.setFont(font[0], font[1]).setFontSize(size).splitTextToSize(loremipsum, 7.5); // Don't want to preset font, size to calculate the lines?\n          // .splitTextToSize(text, maxsize, options)\n          // allows you to pass an object with any of the following:\n          // {\n          // \t'fontSize': 12\n          // \t, 'fontStyle': 'Italic'\n          // \t, 'fontName': 'Times'\n          // }\n          // Without these, .splitTextToSize will use current / default\n          // font Family, Style, Size.\n\n          doc.text(0.5, verticalOffset + size / 72, lines);\n          verticalOffset += (lines.length + 0.5) * size / 72;\n        }\n      }\n\n      doc.save('a4.pdf');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Save text\", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Save audio\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid komask\",\n        src: this.props.hinhanh,\n        alt: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4 size_text_one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"my-3 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"M\\xF4 t\\u1EA3 t\\u1EA3i li\\u1EC7u\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.vanbans.slice(0, 300) + \"...\"), React.createElement(\"h3\", {\n        className: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Th\\u1EBB g\\u1EE3i t\\u1EEB\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.hashtag)), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Dowload file text\"), React.createElement(\"ul\", {\n        className: \"padding_left\",\n        style: {\n          paddingLeft: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        onClick: this.convertHtmlToPdf.bind(this),\n        src: \"https://cdn1.iconfinder.com/data/icons/adobe-acrobat-pdf/154/adobe-acrobat-pdf-file-512.png\",\n        className: \"size_image\",\n        alt: \"demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Length Text\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.vanbans.length), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Audio Language\"), React.createElement(\"video\", {\n        className: \"deme\",\n        style: {\n          height: '50px',\n          width: '310px'\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: this.props.amthanh,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))), React.createElement(\"h3\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"V\\u0103n b\\u1EA3n \\u0111\\u01B0\\u1EE3c h\\u1EC7 th\\u1ED1ng nh\\u1EADn\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control size\",\n        rows: \"7\",\n        cols: \"20\",\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.vanbans)))), React.createElement(\"h3\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Convet text to PDF\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"embed-responsive embed-responsive-16by9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        class: \"embed-responsive-item\",\n        src: this.state.datapdf,\n        allowfullscreen: true,\n        title: \"sd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ShowDataNow;\n}(Component);\n\nexport default ShowDataNow;","map":{"version":3,"sources":["E:/NODE_JS/DM/KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB/src/components/ShowData/LuuData/ShowDataNow.js"],"names":["React","Component","jsPDF","ShowDataNow","props","state","datapdf","fetch","method","headers","body","JSON","stringify","html","vanbans","inlinePdf","fileName","then","res","json","setState","pdf","e","doc","sizes","fonts","font","size","lines","margin","verticalOffset","loremipsum","setDrawColor","setLineWidth","line","i","hasOwnProperty","setFont","setFontSize","splitTextToSize","text","length","save","hinhanh","slice","hashtag","paddingLeft","convertHtmlToPdf","bind","height","width","amthanh"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport jsPDF from 'jspdf';\nclass ShowDataNow extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            datapdf : ''\n        };\n    }\n    \n    componentDidMount() {\n        fetch('https://v2018.api2pdf.com/chrome/html', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': '7868cd09-10b9-43ba-a053-534ce60abb43' //Get your API key from \n            },\n            body: JSON.stringify({html:  this.props.vanbans, inlinePdf: true, fileName: 'test.pdf' })\n          }).then(res=>res.json())\n            .then((res) =>{\n              this.setState({\n                datapdf : res.pdf\n              })\n            });\n    }\n\n    convertHtmlToPdf(e) {\n        var doc = new jsPDF('p', 'in', 'letter'),\n        sizes = [12, 16, 20],\n        fonts = [['Times', 'Roman']],\n        font, size, lines,\n        margin = 0.5, // inches on a 8.5 x 11 inch sheet.\n        verticalOffset = margin,\n        loremipsum = 'Sorry system update'\n\n        // Margins:\n        doc.setDrawColor(0, 255, 0)\n        .setLineWidth(1 / 72)\n        .line(margin, margin, margin, 11 - margin)\n        .line(8.5 - margin, margin, 8.5 - margin, 11 - margin)\n\n        // the 3 blocks of text\n        for (var i in fonts) {\n        if (fonts.hasOwnProperty(i)) {\n          font = fonts[i]\n          size = sizes[i]\n\n          lines = doc.setFont(font[0], font[1])\n                .setFontSize(size)\n                .splitTextToSize(loremipsum, 7.5)\n          // Don't want to preset font, size to calculate the lines?\n          // .splitTextToSize(text, maxsize, options)\n          // allows you to pass an object with any of the following:\n          // {\n          // \t'fontSize': 12\n          // \t, 'fontStyle': 'Italic'\n          // \t, 'fontName': 'Times'\n          // }\n          // Without these, .splitTextToSize will use current / default\n          // font Family, Style, Size.\n          doc.text(0.5, verticalOffset + size / 72, lines)\n\n          verticalOffset += (lines.length + 0.5) * size / 72\n        }\n        }\n        doc.save('a4.pdf')\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n            <h1 className=\"my-4\">Save text\n                <small>Save audio</small>\n            </h1>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <img className=\"img-fluid komask\" src={this.props.hinhanh} alt=\"demo\" />\n                </div>\n                \n                <div className=\"col-md-4 size_text_one\">\n                    <h3 className=\"my-3 \">Mô tả tải liệu</h3>\n                    <p>{this.props.vanbans.slice(0,300) + \"...\"}</p>\n                    <h3 className=\"my-3\">Thẻ gợi từ</h3>\n                    <ul>\n                            <i>{this.props.hashtag}</i>\n                    </ul>\n                    <h3>Dowload file text</h3>\n                    <ul className=\"padding_left\" style={{paddingLeft: '0px'}}>\n                            <img onClick={this.convertHtmlToPdf.bind(this)}  src=\"https://cdn1.iconfinder.com/data/icons/adobe-acrobat-pdf/154/adobe-acrobat-pdf-file-512.png\"  className=\"size_image\" alt=\"demo\"/>\n                    </ul>\n                    <h3>Length Text</h3>\n                    <span>{this.props.vanbans.length}</span>\n                    <h3>Audio Language</h3>\n                    <video className=\"deme\" style={{height: '50px',width: '310px'}}  controls>\n                            <source  src={this.props.amthanh} type=\"video/mp4\" />\n                    </video>\n                </div>\n            </div>\n\n\n\n    <h3 className=\"my-4\">Văn bản được hệ thống nhận</h3>\n    <div className=\"row\">\n        <div className=\"col-12\">\n              <div className=\"form-group\">\n                <textarea className=\"form-control size\"   rows=\"7\" cols=\"20\" placeholder=\"Search...\">\n                    {this.props.vanbans}\n                </textarea>\n              </div>\n        </div>\n    </div>\n\n\n    <h3 className=\"my-4\">Convet text to PDF</h3>\n    <div className=\"row\">\n        <div className=\"col-12\">\n          <div class=\"embed-responsive embed-responsive-16by9\">\n            <iframe class=\"embed-responsive-item\" src={this.state.datapdf} allowfullscreen title=\"sd\"></iframe>\n          </div>\n        </div>\n    </div>\n</div>\n        );\n    }\n}\n\nexport default ShowDataNow;"]},"metadata":{},"sourceType":"module"}