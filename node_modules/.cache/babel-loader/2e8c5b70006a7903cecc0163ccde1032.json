{"ast":null,"code":"import _objectSpread from \"E:\\\\NODE_JS\\\\DM\\\\KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { firebasefor } from '../firebaseconnectio';\nvar initState = {\n  getdata: {}\n};\n\nvar reducerFE = function reducerFE() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SUAQR\":\n      firebasefor.child(action.getupdate.key).update({\n        check: action.getupdate.check\n      });\n      firebasefor.once('value').then(function (snapshot) {\n        console.log(snapshot.val());\n      });\n      console.log(JSON.stringify(action.getupdate));\n      return _objectSpread({}, state, {\n        getdata: action.getitem\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerFE;","map":{"version":3,"sources":["E:/NODE_JS/DM/KCPM_K15A_WEBSITE_NHAN_DIEN_GT_VB/src/reducer/reducerFE.js"],"names":["firebasefor","initState","getdata","reducerFE","state","action","type","child","getupdate","key","update","check","once","then","snapshot","console","log","val","JSON","stringify","getitem"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,sBAA1B;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AADK,CAAlB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,OAAL;AACHN,MAAAA,WAAW,CAACO,KAAZ,CAAkBF,MAAM,CAACG,SAAP,CAAiBC,GAAnC,EAAwCC,MAAxC,CAA+C;AACxCC,QAAAA,KAAK,EAAGN,MAAM,CAACG,SAAP,CAAiBG;AADe,OAA/C;AAGDX,MAAAA,WAAW,CAACY,IAAZ,CAAiB,OAAjB,EAA0BC,IAA1B,CAA+B,UAASC,QAAT,EAAkB;AAChDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,EAAZ;AACD,OAFA;AAGDF,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAed,MAAM,CAACG,SAAtB,CAAZ;AACK,+BAAUJ,KAAV;AAAgBF,QAAAA,OAAO,EAACG,MAAM,CAACe;AAA/B;;AACA;AACI,aAAOhB,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,SAAf","sourcesContent":["import {firebasefor} from '../firebaseconnectio';\n\nconst initState = {\n    getdata: {},\n};\n\nconst reducerFE = (state = initState, action) => {\n    switch (action.type) {\n\t\n        case \"SUAQR\":\n\t\t\t\t\tfirebasefor.child(action.getupdate.key).update({\n            check : action.getupdate.check\n\t\t\t\t})\n\t\t\t\tfirebasefor.once('value').then(function(snapshot){\n\t\t\t\t\tconsole.log(snapshot.val());\n\t\t\t})\n\t\t\tconsole.log(JSON.stringify(action.getupdate));\n        return{...state,getdata:action.getitem}\n        default:\n            return state;\n    }\n};\n\nexport default reducerFE;\n"]},"metadata":{},"sourceType":"module"}